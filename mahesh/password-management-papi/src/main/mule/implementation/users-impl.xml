<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
	<sub-flow name="user-signupSub_Flow" doc:id="a5dab916-bd61-4299-87c3-f27d8838e530" >
		<flow-ref doc:name="Get all user from user sapi" doc:id="1424d6a4-37ce-4cbd-86a7-205e4b7ba8ce" name="common-pwd-management-sapi-callSub_Flow"/>
		<ee:transform doc:name="validating duplicate username and duplicate email" doc:id="01fab168-f2d5-4bc0-b1a8-894841ec42b0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{username: payload.username map lower($) contains  lower(vars.requestPayload.username),
email: payload.email map lower($) contains  lower(vars.requestPayload.email)}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="check username already exists" doc:id="0aa3a9af-e633-4438-a819-9b3191420cd1" >
			<when expression="#[payload.username == false]">
				<logger level="INFO" doc:name="Username is valid" doc:id="457a543e-e5aa-4835-bf2c-8f7c65e2b3c5" message="Username is valid"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Username already exists" doc:id="9ebf47da-a938-4adc-a643-eac229226666" message="Username already exists" />
				<raise-error doc:name="ERROR:DUPLICATE_CLIENT" doc:id="0b5b5fee-3a98-4ed1-9fd2-00658659ebf3" description="Username already exists" type="ERROR:DUPLICATE_CLIENT"/>
			</otherwise>
		</choice>
		<choice doc:name="check email already exists" doc:id="7d412365-31b8-4c3b-ab7c-9a6eca24b9dc" >
			<when expression="#[payload.email == false]">
				<logger level="INFO" doc:name="Email is valid" doc:id="7017dd7b-1737-42b3-819e-3f849854ac62" message="Email is valid"/>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Email already exists" doc:id="8428bed5-75dd-4b55-987e-fa4c292c53b2" message="Email already exists"/>
				<raise-error doc:name="ERROR:DUPLICATE_CLIENT" doc:id="6a0ccc8f-5070-4d7d-9395-89e7c7d511d0" description="Email already exists" type="ERROR:DUPLICATE_CLIENT"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="Generating OTP" doc:id="acda80e9-3f4b-4abe-aa5f-210573864679" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="otp" ><![CDATA[%dw 2.0
output application/json
---
random()[2 to 8]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<!-- [STUDIO:"Send OTP to mail to validate the email id"]<email:send doc:name="Send OTP to mail to validate the email id" doc:id="9689c6b1-b57b-4eb4-9fb7-9d7db62249e9" config-ref="Email_SMTP" fromAddress="${smtp.from}" subject="OTP verification mail">
			<email:to-addresses >
				<email:to-address value="${smtp.to}" />
			</email:to-addresses>
			<email:body contentType="text/html" >
				<email:content ><![CDATA[#[vars.otp&#93;&#93;&#93;></email:content>
			</email:body>
		</email:send> [STUDIO] -->
		<set-payload value='#["An OTP has been sent successfully to your email address"]' doc:name="Response payload" doc:id="00ee3562-1b18-48d2-ad24-271d93fc614c" />
		<logger level="INFO" doc:name="Log response" doc:id="8a9d5ad0-71f0-44ba-b0a6-96230250575e" message="#[payload]" />
		<os:store doc:name="storing the OTP" doc:id="67be93d0-0dec-45f0-843f-18af8ff72be8" key="#[vars.requestPayload.email]" objectStore="Object_store">
			<os:value ><![CDATA[#[%dw 2.0
output application/json
---
vars.requestPayload ++ {"otp" : vars.otp}]]]></os:value>
		</os:store>
	</sub-flow>
	<sub-flow name="user-signinSub_Flow" doc:id="7c9224c7-09cc-44ff-82b2-f0d0db7cfa25" >
		<choice doc:name="Checking if user is present or not" doc:id="9b7a97f4-c2b9-4639-b3c9-c7058aab8de5" >
			<when expression="#[!isEmpty(payload)]">
				<logger level="INFO" doc:name="log Valid credentials" doc:id="a1fe915a-f2a1-479f-8b5b-da7434cde4fd" message="Valid credentials | correlationId : #[correlationId]"/>
				<ee:transform doc:name="generating sssion token" doc:id="0dacf98b-d73b-440d-b6e8-c91abd66f30d" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
uuid()]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<ee:transform doc:name="set request payload and request preset for store token" doc:id="9b55576e-336c-4ec0-8ea9-1b1acf535607" >
					<ee:message />
					<ee:variables >
						<ee:set-variable variableName="requestPayload" ><![CDATA[%dw 2.0
output application/json
---
{"session_token": payload,
"username" : vars.initialPayload.username
}]]></ee:set-variable>
						<ee:set-variable variableName="requestPreset" ><![CDATA[%dw 2.0
output application/json
---
{"host": p('pwd_mngmt.sapi.host') ,
"port":p('pwd_mngmt.sapi.port') ,
"path": p('pwd_mngmt.sapi.loginUser.path'),
"method": p('pwd_mngmt.sapi.loginUser.method')	
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="storing session token in db" doc:id="8e41442f-061d-442e-8ae1-71f48a6c1a27" name="common-pwd-management-sapi-callSub_Flow"/>
				<ee:transform doc:name="response payload" doc:id="2d85e2b0-fd29-4c82-9b54-3c7c059bd1a3" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload ++ {"session_token": vars.requestPayload.session_token}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<raise-error doc:name="ERROR:INVALID_LOGIN" doc:id="bd43c81d-b884-48f6-a4c7-b676d1b281b8" type="ERROR:INVALID_LOGIN"/>
				<logger level="INFO" doc:name="log error" doc:id="32ce2e46-dfda-4303-891f-23e486e2f72e" message="#[payload] | correlationId : #[correlationId]"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="users-verify-signupSub_Flow" doc:id="24adbfc8-86ca-4444-ada4-0fd12f69db0d" >
		<os:retrieve doc:name="retrieve using email" doc:id="9a125be9-9ce5-4b78-93b0-0edd6b5896f9" key="#[vars.inputPayload.email]" objectStore="Object_store">
			<os:default-value ><![CDATA[#[""]]]></os:default-value>
		</os:retrieve>
		<choice doc:name="Validating Email and OTP" doc:id="8bff3ce7-0511-41ad-bf2f-0691f7ce18f2" >
			<when expression='#[vars.inputPayload ==  ({&#10;  "email": payload.email,&#10;  "otp": payload.otp}) default ""]'>
				<ee:transform doc:name="set request payload and request preset for user creation" doc:id="2cf3831c-b5c0-440f-8953-3baad544e3da">
					<ee:message>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="requestPayload" ><![CDATA[%dw 2.0
output application/json
---
payload - "otp"]]></ee:set-variable>
						<ee:set-variable variableName="requestPreset" ><![CDATA[%dw 2.0
output application/json
---
{"host": p('pwd_mngmt.sapi.host') ,
"port":p('pwd_mngmt.sapi.port') ,
"path": p('pwd_mngmt.sapi.registerUser.path'),
"method": p('pwd_mngmt.sapi.registerUser.method')	
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<flow-ref doc:name="User registration" doc:id="1e34e2e2-7dad-4b3d-bf93-2dfab5423e3b" name="common-pwd-management-sapi-callSub_Flow"/>
				<ee:transform doc:name="Response message" doc:id="91d2f8fb-ab75-4476-9c9d-d1fcf606dbdb">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Log response" doc:id="f97ff958-3953-455c-ad0b-8f07ad3aecc5" message="#[payload]" />
				<os:remove doc:name="Remove OTP" doc:id="12e69d75-0466-4e61-bc6c-aa8aae3549b1" key="#[vars.inputPayload.email]" objectStore="Object_store"/>
			</when>
			<otherwise >
				<raise-error doc:name="ERROR:INVALID_CLIENT" doc:id="59012990-2d67-4b5b-95e5-6d2a2a15b8d7" description="Invalid OTP or Username" type="ERROR:INVALID_CLIENT"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="verify-tokenSub_Flow" doc:id="0b3a175e-c40a-49d0-9c63-d437666b7a4d" >
		<ee:transform doc:name="set request attributes and requestPayload to verify sign in" doc:id="5707ec53-815c-4f3a-8a34-407deffbd5ab" >
			<ee:message />
			<ee:variables >
				<ee:set-variable variableName="requestPreset" ><![CDATA[%dw 2.0
output application/json
---
{"host": p('pwd_mngmt.sapi.host') ,
"port": p('pwd_mngmt.sapi.port') ,
"path": p('pwd_mngmt.sapi.verifyToken.path') ,
"method": p('pwd_mngmt.sapi.verifyToken.method'),
"headers": {"session_token" : attributes.headers.session_token}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="verify sign in" doc:id="c6c2496a-ed4d-43e2-bd03-6800fb10b577" name="common-pwd-management-sapi-callSub_Flow" target="session_token"/>
		<choice doc:name="Check token validity" doc:id="b75d802c-0d11-4ceb-b59f-43e4b3bb0946" >
			<when expression="#[isEmpty(vars.session_token)]">
				<raise-error doc:name="Raise error" doc:id="e45439ae-f8ea-4422-b964-dd9bc34054af" type="ERROR:INVALID_SESSION"/>
			</when>
		</choice>
	</sub-flow>
</mule>
